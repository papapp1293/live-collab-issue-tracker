import { useEffect, useState } from 'react';
import { useParams, Link } from 'react-router-dom';
import { fetchIssues, fetchUsers, generateAISummary } from '../services/api';

export default function IssueDetail() {
    const { id } = useParams();
    const [issue, setIssue] = useState(null);
    const [users, setUsers] = useState([]);
    const [error, setError] = useState(null);
    const [loadingAI, setLoadingAI] = useState(false);
    const [aiError, setAiError] = useState(null);

    useEffect(() => {
        fetchIssues().then((allIssues) => {
            const found = allIssues.find((i) => i.id === parseInt(id));
            if (found) setIssue(found);
            else setError('Issue not found');
        });

        fetchUsers()
            .then(setUsers)
            .catch(() => {
                setError('Failed to load user data');
            });
    }, [id]);

    const handleGenerateAISummary = async () => {
        setLoadingAI(true);
        setAiError(null);

        try {
            const response = await generateAISummary(issue.id);
            setIssue(prevIssue => ({
                ...prevIssue,
                ai_summary: response.ai_summary
            }));
        } catch (err) {
            console.error('Failed to generate AI summary:', err);
            setAiError('Failed to generate AI summary. Please try again.');
        } finally {
            setLoadingAI(false);
        }
    };

    if (error)
        return (
            <p className="alert error p-3">
                {error}
            </p>
        );
    if (!issue) return <p className="p p-3">Loading...</p>;

    // Find assigned users by their individual roles
    const assignedDeveloper = users.find((u) => u.id === issue.assigned_developer);
    const assignedTester = users.find((u) => u.id === issue.assigned_tester);

    return (
        <div className="container p-4">
            <div className="flex space-between middle mb-4">
                <h2 className="header">{issue.title}</h2>
                <Link to="/issues" className="button secondary small" style={{ minWidth: '32px', textAlign: 'center' }}>
                    âœ•
                </Link>
            </div>

            <p className="mb-3">
                <strong>Description: </strong> {issue.description}
            </p>

            {issue.ai_summary && (
                <div className="card p mb-3" style={{ backgroundColor: '#f8f9fa', border: '1px solid #e9ecef' }}>
                    <div className="flex middle space-between mb-2">
                        <div className="flex middle gap">
                            <strong>ðŸ¤– AI Summary:</strong>
                            <span className="badge secondary text-sm">Generated by AI</span>
                        </div>
                        <button
                            onClick={handleGenerateAISummary}
                            disabled={loadingAI}
                            className="button secondary small"
                            title="Regenerate AI summary"
                        >
                            {loadingAI ? 'ðŸ”„ Regenerating...' : 'ðŸ”„ Regenerate'}
                        </button>
                    </div>
                    <p className="text-muted mb-0">{issue.ai_summary}</p>
                    {aiError && <p className="alert error mt-2 mb-0">{aiError}</p>}
                </div>
            )}

            {!issue.ai_summary && (
                <div className="card p mb-3" style={{ backgroundColor: '#fff3cd', border: '1px solid #ffeaa7' }}>
                    <div className="flex middle space-between">
                        <div>
                            <strong>ðŸ’¡ AI Summary</strong>
                            <p className="text-muted mb-0 mt-1">Generate an AI summary to better understand this issue</p>
                        </div>
                        <button
                            onClick={handleGenerateAISummary}
                            disabled={loadingAI}
                            className="button primary small"
                        >
                            {loadingAI ? 'ðŸ¤– Generating...' : 'ðŸ¤– Generate Summary'}
                        </button>
                    </div>
                    {aiError && <p className="alert error mt-2 mb-0">{aiError}</p>}
                </div>
            )}

            <p className="mb-3">
                <strong>Status: </strong>
                <span className="badge primary" style={{ textTransform: 'capitalize' }}>
                    {issue.status.replace('_', ' ')}
                </span>
            </p>

            <div className="mb-4">
                <strong>Assignments:</strong>
                <div className="mt-2">
                    {assignedDeveloper ? (
                        <div className="mb-1">
                            <span className="badge secondary">
                                Assigned Developer: {assignedDeveloper.name} ({assignedDeveloper.email})
                            </span>
                        </div>
                    ) : (
                        <div className="mb-1">
                            <span className="badge secondary">
                                Assigned Developer: None
                            </span>
                        </div>
                    )}
                    {assignedTester ? (
                        <div className="mb-1">
                            <span className="badge secondary">
                                Assigned Tester: {assignedTester.name} ({assignedTester.email})
                            </span>
                        </div>
                    ) : (
                        <div className="mb-1">
                            <span className="badge secondary">
                                Assigned Tester: None
                            </span>
                        </div>
                    )}
                </div>
            </div>

            <div className="buttons mt-4">
                <Link to={`/issues/${issue.id}/edit`} className="button primary small mr-2">
                    Edit
                </Link>
                <Link to="/issues" className="button secondary small">
                    Back to Issues
                </Link>
            </div>
        </div>
    );
}
